{
  "name": "coinietrade-front",
  "version": "0.0.1",
  "description": "CoinieTrade front end and Gateway.",
  "main": "index.js",
  "engines": {
    "node": "10.0.0",
    "yarn": "1.6.0"
  },
  "repository": "https://github.com/keidrun/coinietrade-front.git",
  "author": "keidrun",
  "license": "No license",
  "private": true,
  "dependencies": {
    "axios": "^0.18.0",
    "body-parser": "^1.18.2",
    "cookie-parser": "^1.4.3",
    "csurf": "^1.9.0",
    "express": "^4.16.2",
    "express-validator": "^5.0.3",
    "helmet": "^3.12.0",
    "jsonwebtoken": "^8.1.1",
    "mongoose": "^5.0.11",
    "passport": "^0.4.0",
    "passport-facebook": "^2.1.1",
    "passport-google-oauth20": "^1.0.0",
    "qs": "^6.5.1",
    "socket.io": "^2.0.4",
    "validator": "^9.4.1"
  },
  "devDependencies": {
    "chai": "^4.1.2",
    "dotenv": "^5.0.0",
    "eslint": "^4.19.1",
    "eslint-plugin-node": "^6.0.1",
    "mocha": "^5.0.1",
    "nock": "^9.2.3",
    "npm-run-all": "^4.1.2",
    "nyc": "^11.6.0",
    "react-scripts": "^1.1.1",
    "sinon": "^4.4.2",
    "supertest": "^3.0.0"
  },
  "scripts": {
    "start": "node server/src/server.js ",
    "lint": "eslint server/src/**/**.js",
    "test": "NODE_ENV=test nyc mocha server/test/**/*test*.js",
    "coverage": "nyc report --reporter=text-lcov > coverage.lcov",
    "test-ci": "NODE_ENV=ci nyc mocha server/test/**/*test*.js && yarn coverage",
    "watch:lint": "nodemon --exec yarn lint",
    "watch:test": "nodemon --exec yarn test",
    "watch": "npm-run-all -p watch:*",
    "build": "yarn --cwd client build",
    "env:reset": "cp -rf ../coinietrade-env/front/.env .",
    "env:tree": "git -C ../coinietrade-env/front/ tree",
    "env:status": "git -C ../coinietrade-env/front/ status",
    "env:diff": "diff .env ../coinietrade-env/front/.env || :",
    "env:commit": "cp -rf .env ../coinietrade-env/front/ && git -C ../coinietrade-env/front/ commit -am 'Update env file.'",
    "env:base64": "cat .env | base64",
    "up": "docker-compose -f docker-compose.dev.yml up -d",
    "web:up": "docker-compose -f docker-compose.dev.yml up -d web",
    "db:up": "docker-compose -f docker-compose.dev.yml up -d db",
    "down": "docker-compose -f docker-compose.dev.yml down",
    "ps": "docker-compose -f docker-compose.dev.yml ps",
    "dev:mongo": "docker ps | grep 27019 || yarn db:up",
    "dev:server": "sleep 5 && nodemon server/src/server.js",
    "dev:client": "yarn --cwd client start",
    "dev": "npm-run-all -p dev:*",
    "ci_ps": "docker-compose -f docker-compose.ci.yml ps",
    "ci:up": "yarn build && docker-compose -f docker-compose.ci.yml up -d",
    "ci:lint": "docker-compose -f docker-compose.ci.yml exec web yarn lint",
    "ci:test": "docker-compose -f docker-compose.ci.yml exec web yarn test-ci",
    "ci:down": "docker-compose -f docker-compose.ci.yml down",
    "ci": "npm-run-all -s ci:*",
    "staging:build": "yarn build && docker-compose -f docker-compose.dockerhub.yml build --no-cache web",
    "staging:push": "docker push `node -pe \"require('dotenv').config().parsed.DOCKERHUB_USER\"`/`node -pe \"require('dotenv').config().parsed.DOCKERHUB_REPOSITORY\"`:`node -pe \"require('dotenv').config().parsed.TAG\"`",
    "staging:deploy": "docker tag `node -pe \"require('dotenv').config().parsed.DOCKERHUB_USER\"`/`node -pe \"require('dotenv').config().parsed.DOCKERHUB_REPOSITORY\"`:`node -pe \"require('dotenv').config().parsed.TAG\"` `node -pe \"require('dotenv').config().parsed.STAGING_HEROKU_REGISTRY\"`/`node -pe \"require('dotenv').config().parsed.STAGING_HEROKU_APP\"`/`node -pe \"require('dotenv').config().parsed.STAGING_HEROKU_PROCESS_TYPE\"`:`node -pe \"require('dotenv').config().parsed.TAG\"` && docker push `node -pe \"require('dotenv').config().parsed.STAGING_HEROKU_REGISTRY\"`/`node -pe \"require('dotenv').config().parsed.STAGING_HEROKU_APP\"`/`node -pe \"require('dotenv').config().parsed.STAGING_HEROKU_PROCESS_TYPE\"`:`node -pe \"require('dotenv').config().parsed.TAG\"`",
    "staging": "npm-run-all -s staging:*",
    "prod-blue:pull": "docker pull `node -pe \"require('dotenv').config().parsed.DOCKERHUB_USER\"`/`node -pe \"require('dotenv').config().parsed.DOCKERHUB_REPOSITORY\"`:`node -pe \"require('dotenv').config().parsed.TAG\"`",
    "prod-blue:deploy": "docker tag `node -pe \"require('dotenv').config().parsed.DOCKERHUB_USER\"`/`node -pe \"require('dotenv').config().parsed.DOCKERHUB_REPOSITORY\"`:`node -pe \"require('dotenv').config().parsed.TAG\"` `node -pe \"require('dotenv').config().parsed.PROD_HEROKU_REGISTRY\"`/`node -pe \"require('dotenv').config().parsed.PROD_HEROKU_APP_BLUE\"`/`node -pe \"require('dotenv').config().parsed.PROD_HEROKU_PROCESS_TYPE\"`:`node -pe \"require('dotenv').config().parsed.TAG\"` && docker push `node -pe \"require('dotenv').config().parsed.PROD_HEROKU_REGISTRY\"`/`node -pe \"require('dotenv').config().parsed.PROD_HEROKU_APP_BLUE\"`/`node -pe \"require('dotenv').config().parsed.PROD_HEROKU_PROCESS_TYPE\"`:`node -pe \"require('dotenv').config().parsed.TAG\"`",
    "prod-blue": "npm-run-all -s prod-blue:*",
    "prod-green:pull": "docker pull `node -pe \"require('dotenv').config().parsed.DOCKERHUB_USER\"`/`node -pe \"require('dotenv').config().parsed.DOCKERHUB_REPOSITORY\"`:`node -pe \"require('dotenv').config().parsed.TAG\"`",
    "prod-green:deploy": "docker tag `node -pe \"require('dotenv').config().parsed.DOCKERHUB_USER\"`/`node -pe \"require('dotenv').config().parsed.DOCKERHUB_REPOSITORY\"`:`node -pe \"require('dotenv').config().parsed.TAG\"` `node -pe \"require('dotenv').config().parsed.PROD_HEROKU_REGISTRY\"`/`node -pe \"require('dotenv').config().parsed.PROD_HEROKU_APP_GREEN\"`/`node -pe \"require('dotenv').config().parsed.PROD_HEROKU_PROCESS_TYPE\"`:`node -pe \"require('dotenv').config().parsed.TAG\"` && docker push `node -pe \"require('dotenv').config().parsed.PROD_HEROKU_REGISTRY\"`/`node -pe \"require('dotenv').config().parsed.PROD_HEROKU_APP_GREEN\"`/`node -pe \"require('dotenv').config().parsed.PROD_HEROKU_PROCESS_TYPE\"`:`node -pe \"require('dotenv').config().parsed.TAG\"`",
    "prod-green": "npm-run-all -s prod-green:*"
  }
}
