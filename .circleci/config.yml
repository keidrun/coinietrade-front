version: 2
jobs:
  build:
    working_directory: ~/repo
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Decode dotenv file
          command: echo $ENV_FILE | base64 --decode > .env
      - run:
          name: Setup Nodejs and Yarn
          command: |
            # install nvm and nodejs
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
            source ~/.bash_profile
            nvm install v10.6.0
            nvm alias default  v10.6.0

            # Add nvm settings to circleci's build environment
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"" >> $BASH_ENV

            # Install yarn
            npm install -g yarn@1.7.0
      - run:
          name: Setup Heroku
          command: bash .circleci/setup-heroku.sh
      - run:
          name: Setup dockerize
          command: bash .circleci/setup-dockerize.sh
      - run:
          name: Check versions
          command: |
            grep -H "" /etc/*version ; grep -H "" /etc/*release
            docker --version
            nvm --version
            node --version
            yarn --version
            heroku --version
            dockerize --version
      - run:
          name: Install dependencies for Client
          command: |
            # if 404 occurred, remove yarn.lock OR yarn upgrade locally before
            #rm client/yarn.lock
            yarn --cwd client install --ignore-engines
      - run:
         name: Install dependencies for Server
         command: yarn install
      - run:
          name: Run Docker containers for CI
          command: yarn ci:up
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
         name: Wait for db
         command: dockerize -wait tcp://localhost:27017 -timeout 1m
      - run:
          name: Rub lint for Server
          command: yarn ci:lint
      - run:
         name: Run tests for Server and Report coverage to Codecov
         command: |
          yarn ci:test
          bash <(curl -s https://codecov.io/bash)
      - run:
          name: Build Docker image for production
          command: yarn staging:build
      - run:
          name: Push Docker image to DockerHub for production
          command: |
            echo $DOCKER_PASS | docker login --username $DOCKER_USER --password-stdin
            yarn staging:push
      - run:
          name: Deploy Docker image to Heroku for staging
          command: |
            heroku container:login
            yarn staging:deploy
